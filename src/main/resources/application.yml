spring:
  application:
    name: mediroute

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/mediroute
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      # Add connection timeout and idle timeout
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  # JPA Configuration - Let Hibernate handle schema
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # LAZY LOADING SETTINGS
        enable_lazy_load_no_trans: false  # Don't allow lazy loading outside transactions
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        # Query optimization
        query:
          plan_cache_max_size: 2048
        # Session management
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
    show-sql: false
    open-in-view: false  # CRITICAL: Disable Open Session in View

    # Transaction Configuration
  transaction:
    default-timeout: 300
    rollback-on-commit-failure: true

  # DISABLE Liquibase for now - CRITICAL FIX
  liquibase:
    enabled: false

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: America/Denver

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  # Redis configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    type: redis
    redis:
      time-to-live: 300000 # 5 minutes TTL for cache entries
# External Services
google:
  api:
    key: ${GOOGLE_API_KEY:} # Set via environment variable or secret manager

osrm:
  base-url: ${OSRM_BASE_URL:http://localhost:5000}

# MediRoute Specific
mediroute:
  depot-distance: 10
  mph-factor: 120



# Resilience4j configuration for OSRM
resilience4j:
  metrics:
    enabled: true
  circuitbreaker:
    instances:
      osrm:
        slidingWindowSize: 20
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 10
  retry:
    instances:
      osrm:
        maxAttempts: 3
        waitDuration: 300ms
  ratelimiter:
    instances:
      osrm:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 200ms
  bulkhead:
    instances:
      osrm:
        maxConcurrentCalls: 10
        maxWaitDuration: 0


# Logging for Lazy Loading Issues
logging:
  level:
    com.mediroute: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.hibernate.engine.transaction: WARN
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /
    forward-headers-strategy: framework
    session:
      timeout: 30m
# Add to application.yml
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans,prometheus
      base-path: /actuator
  endpoint:
    prometheus:
      enabled: true
    health:
      show-details: when-authorized
      probes:
        enabled: true
  info:
    env:
      enabled: true

  metrics:
    tags:
      application: mediroute
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        executor: true
      slo:
        http.server.requests: 100ms,250ms,500ms,1s,2s,5s
        optimizer.job.duration: 5s,10s,30s,1m,2m,5m

info:
  app:
    name: MediRoute
    description: Medical Transport Management System
    version: 2.0.0
    java:
      version: ${java.version}
# Add to application.yml
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    display-request-duration: true
    disable-swagger-default-url: true
  packages-to-scan: com.mediroute.controller
  paths-to-match: /api/**

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        type: trace

logging:
  level:
    com.mediroute: TRACE
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# src/main/resources/application.yml
app:
  security:
    issuer: "https://mediroute.local"
    access-token-ttl-min: 10
    refresh-token-ttl-days: 14
    cookie-name: refresh_token
    cors:
      origins:
        - "http://localhost:5173"

jwt:
  private-key-pem: ${JWT_PRIVATE_KEY:${JWT_PRIVATE_PEM:}}
  public-key-pem: ${JWT_PUBLIC_KEY:${JWT_PUBLIC_PEM:}}
server:
  servlet:
    session:
      cookie:
        same-site: strict