## ============================================================================
## MEDIROUTE APPLICATION CONFIGURATION
## ============================================================================
#spring:
#  application:
#    name: mediroute
#
#  # Database Configuration
#  datasource:
#    url: jdbc:postgresql://localhost:5432/mediroute
#    username: postgres
#    password: postgres
#    driver-class-name: org.postgresql.Driver
#    hikari:
#      maximum-pool-size: 20
#      minimum-idle: 5
#
#  # JPA Configuration
#  jpa:
#    hibernate:
#      ddl-auto: update  # Changed from create-drop for development
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#        enable_lazy_load_no_trans: false  # Disable lazy loading outside transactions
#
#    show-sql: false
#    open-in-view: false  # This prevents lazy loading issues
#
#  # Also add Jackson configuration for proper JSON serialization
#  jackson:
#    serialization:
#      fail-on-empty-beans: false
#    default-property-inclusion: non_null
#  # Liquibase - DISABLED for now to avoid conflicts
#  liquibase:
#    enabled: false
#
#  # Jackson Configuration
##  jackson:
##    serialization:
##      write-dates-as-timestamps: false
##    time-zone: America/Denver
#
#  # File Upload Configuration
#  servlet:
#    multipart:
#      max-file-size: 50MB
#      max-request-size: 50MB
#
## External Services
#google:
#  api:
#    key: AIzaSyAT-7uIyoB9yz5jrSRSlHhmMBWFEm8DUog
#
#osrm:
#  base-url: http://localhost:5000
#
## MediRoute Specific
#mediroute:
#  depot-distance: 10
#  mph-factor: 120
#
## Logging
#logging:
#  level:
#    com.mediroute: DEBUG
#    org.hibernate.SQL: WARN
#    org.springframework.web: WARN
#
## Server
#server:
#  port: 8080
#
#---
## Development Profile
#spring:
#  config:
#    activate:
#      on-profile: dev
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: create-drop
#
#logging:
#  level:
#    com.mediroute: TRACE

# Updated application.yml with critical fixes
spring:
  application:
    name: mediroute

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/mediroute
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      # Add connection timeout and idle timeout
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  # JPA Configuration - Let Hibernate handle schema
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # LAZY LOADING SETTINGS
        enable_lazy_load_no_trans: false  # Don't allow lazy loading outside transactions
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        # Query optimization
        query:
          plan_cache_max_size: 2048
        # Session management
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
    show-sql: false
    open-in-view: false  # CRITICAL: Disable Open Session in View

    # Transaction Configuration
  transaction:
    default-timeout: 300
    rollback-on-commit-failure: true

  # DISABLE Liquibase for now - CRITICAL FIX
  liquibase:
    enabled: false

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: America/Denver

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

# External Services
google:
  api:
    key: AIzaSyAT-7uIyoB9yz5jrSRSlHhmMBWFEm8DUog # Set via environment variable

osrm:
  base-url: ${OSRM_BASE_URL:http://localhost:5000}

# MediRoute Specific
mediroute:
  depot-distance: 10
  mph-factor: 120


# Logging for Lazy Loading Issues
logging:
  level:
    com.mediroute: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.hibernate.engine.transaction: WARN
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
    forward-headers-strategy: framework
    session:
      timeout: 30m
# Add to application.yml
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  info:
    env:
      enabled: true

info:
  app:
    name: MediRoute
    description: Medical Transport Management System
    version: 2.0.0
    java:
      version: ${java.version}
# Add to application.yml
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    display-request-duration: true
    disable-swagger-default-url: true
  packages-to-scan: com.mediroute.controller
  paths-to-match: /api/**

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        type: trace

logging:
  level:
    com.mediroute: TRACE
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE